{
    "sourceFile": "app/ui/invoices/pagination.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1727381980335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1727381995442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   return (\n     <>\n       {/*  NOTE: Uncomment this code in Chapter 11 */}\n \n-      {/* <div className=\"inline-flex\">\n+      <div className=\"inline-flex\">\n         <PaginationArrow\n           direction=\"left\"\n           href={createPageURL(currentPage - 1)}\n           isDisabled={currentPage <= 1}\n@@ -49,9 +49,9 @@\n           direction=\"right\"\n           href={createPageURL(currentPage + 1)}\n           isDisabled={currentPage >= totalPages}\n         />\n-      </div> */}\n+      </div>\n     </>\n   );\n }\n \n"
                },
                {
                    "date": 1727382023934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,25 @@\n-'use client';\n+\"use client\";\n \n-import { ArrowLeftIcon, ArrowRightIcon } from '@heroicons/react/24/outline';\n-import clsx from 'clsx';\n-import Link from 'next/link';\n-import { generatePagination } from '@/app/lib/utils';\n-import { usePathname, useSearchParams } from 'next/navigation';\n+import { ArrowLeftIcon, ArrowRightIcon } from \"@heroicons/react/24/outline\";\n+import clsx from \"clsx\";\n+import Link from \"next/link\";\n+import { generatePagination } from \"@/app/lib/utils\";\n+import { usePathname, useSearchParams } from \"next/navigation\";\n \n export default function Pagination({ totalPages }: { totalPages: number }) {\n   // NOTE: Uncomment this code in Chapter 11\n   const pathname = usePathname();\n   const searchParams = useSearchParams();\n-  const currentPage = Number(searchParams.get('page')) || 1;\n-  // const allPages = generatePagination(currentPage, totalPages);\n+  const currentPage = Number(searchParams.get(\"page\")) || 1;\n+  const allPages = generatePagination(currentPage, totalPages);\n \n+  const createPageURL = (pageNumber: number | string) => {\n+    const params = new URLSearchParams(searchParams);\n+    params.set('page', pageNumber.toString());\n+    return `${pathname}?${params.toString()}`;\n+  };\n+\n   return (\n     <>\n       {/*  NOTE: Uncomment this code in Chapter 11 */}\n \n@@ -25,14 +31,14 @@\n         />\n \n         <div className=\"flex -space-x-px\">\n           {allPages.map((page, index) => {\n-            let position: 'first' | 'last' | 'single' | 'middle' | undefined;\n+            let position: \"first\" | \"last\" | \"single\" | \"middle\" | undefined;\n \n-            if (index === 0) position = 'first';\n-            if (index === allPages.length - 1) position = 'last';\n-            if (allPages.length === 1) position = 'single';\n-            if (page === '...') position = 'middle';\n+            if (index === 0) position = \"first\";\n+            if (index === allPages.length - 1) position = \"last\";\n+            if (allPages.length === 1) position = \"single\";\n+            if (page === \"...\") position = \"middle\";\n \n             return (\n               <PaginationNumber\n                 key={page}\n@@ -62,23 +68,23 @@\n   position,\n }: {\n   page: number | string;\n   href: string;\n-  position?: 'first' | 'last' | 'middle' | 'single';\n+  position?: \"first\" | \"last\" | \"middle\" | \"single\";\n   isActive: boolean;\n }) {\n   const className = clsx(\n-    'flex h-10 w-10 items-center justify-center text-sm border',\n+    \"flex h-10 w-10 items-center justify-center text-sm border\",\n     {\n-      'rounded-l-md': position === 'first' || position === 'single',\n-      'rounded-r-md': position === 'last' || position === 'single',\n-      'z-10 bg-blue-600 border-blue-600 text-white': isActive,\n-      'hover:bg-gray-100': !isActive && position !== 'middle',\n-      'text-gray-300': position === 'middle',\n-    },\n+      \"rounded-l-md\": position === \"first\" || position === \"single\",\n+      \"rounded-r-md\": position === \"last\" || position === \"single\",\n+      \"z-10 bg-blue-600 border-blue-600 text-white\": isActive,\n+      \"hover:bg-gray-100\": !isActive && position !== \"middle\",\n+      \"text-gray-300\": position === \"middle\",\n+    }\n   );\n \n-  return isActive || position === 'middle' ? (\n+  return isActive || position === \"middle\" ? (\n     <div className={className}>{page}</div>\n   ) : (\n     <Link href={href} className={className}>\n       {page}\n@@ -91,23 +97,23 @@\n   direction,\n   isDisabled,\n }: {\n   href: string;\n-  direction: 'left' | 'right';\n+  direction: \"left\" | \"right\";\n   isDisabled?: boolean;\n }) {\n   const className = clsx(\n-    'flex h-10 w-10 items-center justify-center rounded-md border',\n+    \"flex h-10 w-10 items-center justify-center rounded-md border\",\n     {\n-      'pointer-events-none text-gray-300': isDisabled,\n-      'hover:bg-gray-100': !isDisabled,\n-      'mr-2 md:mr-4': direction === 'left',\n-      'ml-2 md:ml-4': direction === 'right',\n-    },\n+      \"pointer-events-none text-gray-300\": isDisabled,\n+      \"hover:bg-gray-100\": !isDisabled,\n+      \"mr-2 md:mr-4\": direction === \"left\",\n+      \"ml-2 md:ml-4\": direction === \"right\",\n+    }\n   );\n \n   const icon =\n-    direction === 'left' ? (\n+    direction === \"left\" ? (\n       <ArrowLeftIcon className=\"w-4\" />\n     ) : (\n       <ArrowRightIcon className=\"w-4\" />\n     );\n"
                }
            ],
            "date": 1727381980335,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { ArrowLeftIcon, ArrowRightIcon } from '@heroicons/react/24/outline';\nimport clsx from 'clsx';\nimport Link from 'next/link';\nimport { generatePagination } from '@/app/lib/utils';\nimport { usePathname, useSearchParams } from 'next/navigation';\n\nexport default function Pagination({ totalPages }: { totalPages: number }) {\n  // NOTE: Uncomment this code in Chapter 11\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const currentPage = Number(searchParams.get('page')) || 1;\n  // const allPages = generatePagination(currentPage, totalPages);\n\n  return (\n    <>\n      {/*  NOTE: Uncomment this code in Chapter 11 */}\n\n      {/* <div className=\"inline-flex\">\n        <PaginationArrow\n          direction=\"left\"\n          href={createPageURL(currentPage - 1)}\n          isDisabled={currentPage <= 1}\n        />\n\n        <div className=\"flex -space-x-px\">\n          {allPages.map((page, index) => {\n            let position: 'first' | 'last' | 'single' | 'middle' | undefined;\n\n            if (index === 0) position = 'first';\n            if (index === allPages.length - 1) position = 'last';\n            if (allPages.length === 1) position = 'single';\n            if (page === '...') position = 'middle';\n\n            return (\n              <PaginationNumber\n                key={page}\n                href={createPageURL(page)}\n                page={page}\n                position={position}\n                isActive={currentPage === page}\n              />\n            );\n          })}\n        </div>\n\n        <PaginationArrow\n          direction=\"right\"\n          href={createPageURL(currentPage + 1)}\n          isDisabled={currentPage >= totalPages}\n        />\n      </div> */}\n    </>\n  );\n}\n\nfunction PaginationNumber({\n  page,\n  href,\n  isActive,\n  position,\n}: {\n  page: number | string;\n  href: string;\n  position?: 'first' | 'last' | 'middle' | 'single';\n  isActive: boolean;\n}) {\n  const className = clsx(\n    'flex h-10 w-10 items-center justify-center text-sm border',\n    {\n      'rounded-l-md': position === 'first' || position === 'single',\n      'rounded-r-md': position === 'last' || position === 'single',\n      'z-10 bg-blue-600 border-blue-600 text-white': isActive,\n      'hover:bg-gray-100': !isActive && position !== 'middle',\n      'text-gray-300': position === 'middle',\n    },\n  );\n\n  return isActive || position === 'middle' ? (\n    <div className={className}>{page}</div>\n  ) : (\n    <Link href={href} className={className}>\n      {page}\n    </Link>\n  );\n}\n\nfunction PaginationArrow({\n  href,\n  direction,\n  isDisabled,\n}: {\n  href: string;\n  direction: 'left' | 'right';\n  isDisabled?: boolean;\n}) {\n  const className = clsx(\n    'flex h-10 w-10 items-center justify-center rounded-md border',\n    {\n      'pointer-events-none text-gray-300': isDisabled,\n      'hover:bg-gray-100': !isDisabled,\n      'mr-2 md:mr-4': direction === 'left',\n      'ml-2 md:ml-4': direction === 'right',\n    },\n  );\n\n  const icon =\n    direction === 'left' ? (\n      <ArrowLeftIcon className=\"w-4\" />\n    ) : (\n      <ArrowRightIcon className=\"w-4\" />\n    );\n\n  return isDisabled ? (\n    <div className={className}>{icon}</div>\n  ) : (\n    <Link className={className} href={href}>\n      {icon}\n    </Link>\n  );\n}\n"
        }
    ]
}